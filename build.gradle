plugins {
    id 'application'
    alias libs.plugins.flyway
    alias libs.plugins.versions
}

version = '0.2.0'

repositories {
    mavenCentral()
}

application {
    mainClass = 'com.cosmoport.core.App'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    targetCompatibility = JavaVersion.VERSION_21
}

compileTestJava {
    options.encoding = 'UTF-8'
}

compileJava {
    options.compilerArgs << '-Xlint:-processing' << '-Xlint:-options' << '-Xlint:all'
    options.warnings = true
    options.deprecation = true
    options.encoding = 'UTF-8'
}

distributions {
    main {
        contents {
            from(file("$projectDir/db")) {
                into 'db'
                include('**/*.db')
                includeEmptyDirs = false
            }
        }
    }
}

startScripts {
    applicationName = "core-$version"
}

distZip {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

test {
    useJUnitPlatform()
}

dependencies {
    // Server
    implementation libs.bundles.jetty

    // JAX-RS
    implementation(libs.resteasy.guice) {
        exclude group: "org.jboss.resteasy", module: "resteasy-client"
    }
    implementation(libs.resteasy.jackson2.provider)
    implementation(libs.resteasy.multipart.provider) {
        exclude group: "org.jboss.resteasy", module: "resteasy-jaxb-provider"
    }

    // JSON
    implementation libs.bundles.jackson

    // DI
    implementation libs.bundles.guice

    // Pub/Sub
    implementation libs.guava

    // Scheduler
    implementation libs.guice.async.extension

    // Database
    implementation libs.sqlite
    implementation libs.hikaricp
    implementation libs.flyway

    // Logging
    runtimeOnly libs.logback.classic
    runtimeOnly libs.slf4j.log4j
    implementation libs.slf4j.jul

    // Test
    testImplementation(platform(libs.junit))
    testImplementation('org.junit.jupiter:junit-jupiter')
    // IDEA JUnit stuff
    testImplementation libs.apiguardian
    // Database
    // Migrations
    testImplementation libs.flyway
    // For Flyway's single db connection datasource
    testImplementation libs.spring.jdbc
}
